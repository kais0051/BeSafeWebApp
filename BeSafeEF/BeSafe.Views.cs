//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(EF6CodeFirstDemo.BeSafeContainer),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsfb79c714e8402eff8251b3ddd0db868458429490898e49fd7dd414f1bbd5d8f7))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsfb79c714e8402eff8251b3ddd0db868458429490898e49fd7dd414f1bbd5d8f7 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "fb79c714e8402eff8251b3ddd0db868458429490898e49fd7dd414f1bbd5d8f7"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "BeSafeStoreContainer.MasterItemsSet")
            {
                return GetView0();
            }

            if (extentName == "BeSafeContainer.MasterItemsSet")
            {
                return GetView1();
            }

            if (extentName == "BeSafeStoreContainer.Categories")
            {
                return GetView2();
            }

            if (extentName == "BeSafeContainer.Categories")
            {
                return GetView3();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for BeSafeStoreContainer.MasterItemsSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MasterItemsSet
        [BeSafe.Store.MasterItemsSet](T1.MasterItemsSet_Id, T1.MasterItemsSet_name, T1.MasterItemsSet_description)
    FROM (
        SELECT 
            T.Id AS MasterItemsSet_Id, 
            T.name AS MasterItemsSet_name, 
            T.description AS MasterItemsSet_description, 
            True AS _from0
        FROM BeSafeContainer.MasterItemsSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BeSafeContainer.MasterItemsSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MasterItemsSet
        [BeSafe.MasterItems](T1.MasterItems_Id, T1.MasterItems_name, T1.MasterItems_description)
    FROM (
        SELECT 
            T.Id AS MasterItems_Id, 
            T.name AS MasterItems_name, 
            T.description AS MasterItems_description, 
            True AS _from0
        FROM BeSafeStoreContainer.MasterItemsSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BeSafeStoreContainer.Categories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Categories
        [BeSafe.Store.Categories](T1.Categories_CategoryId, T1.Categories_CategoryName, T1.Categories_ParentCategoryId, T1.Categories_Remarks)
    FROM (
        SELECT 
            T.CategoryId AS Categories_CategoryId, 
            T.CategoryName AS Categories_CategoryName, 
            T.ParentCategoryId AS Categories_ParentCategoryId, 
            T.Remarks AS Categories_Remarks, 
            True AS _from0
        FROM BeSafeContainer.Categories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BeSafeContainer.Categories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Categories
        [BeSafe.Categories](T1.Categories_CategoryId, T1.Categories_CategoryName, T1.Categories_ParentCategoryId, T1.Categories_Remarks)
    FROM (
        SELECT 
            T.CategoryId AS Categories_CategoryId, 
            T.CategoryName AS Categories_CategoryName, 
            T.ParentCategoryId AS Categories_ParentCategoryId, 
            T.Remarks AS Categories_Remarks, 
            True AS _from0
        FROM BeSafeStoreContainer.Categories AS T
    ) AS T1");
        }
    }
}
